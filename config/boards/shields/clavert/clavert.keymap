
  /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/ext_power.h>

  #define DEFAULT 0
  #define DE 1
  #define NAV 2
  #define NUM 3
  #define FN 4

  &sk {
    release-after-ms = <2000>;
    quick-release;
    /delete-property/ ignore-modifiers;
  };

/ {
    macros {
        de_ae_shifted: de_ae_shifted {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
           wait-ms = <0>;
           tap-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_N1 &kp KP_N4 &kp KP_N2>
            , <&macro_release &kp LALT>
          ;
        };
        de_ue_shifted: de_ue_shifted {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
           wait-ms = <0>;
           tap-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_N1 &kp KP_N5 &kp KP_N4>
            , <&macro_release &kp LALT>
          ;
        };
        de_oe_shifted: de_oe_shifted {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
           wait-ms = <0>;
           tap-ms = <0>;
        bindings
            = <&macro_press   &kp LALT>
            , <&macro_tap     &kp KP_N1 &kp KP_N5 &kp KP_N3>
            , <&macro_release &kp LALT>
          ;
        };
    };
};

  / {
    keymap {
      compatible = "zmk,keymap";
        default_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------
// | ESC        | 1     | 2    | 3     | 4     | 5    |                                               | 6   | 7   | 8     | 9    | 0   | FSLH |
// | SQT        | X     | V    | L     | C     | W    | HOME  |                            | DEL      | K   | H   | G     | F    | Q   | =     |
// | GRAVE      | U     | I    | A     | E     | O    | \     |                            | BSPC     | S   | N   | R     | T    | D   | MINUS |
// | PG_UP      | Y     | [    | ]     | P     | Z    | LSHFT | LCTRL   |         | MOD1   | ENTER    | B   | M   | COMMA | DOT  | J   | SEMI  |
// | PG_DN      | END   | LEFT | RIGHT |      LALT    | LGUI  | SPACE   |         | MOD2   | MOD3     | TAB       | UP    | DOWN | INS | PRTSCN|
          bindings = <
    &kp ESC      &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                                         &kp N6   &kp N7 &kp N8    &kp N9    &kp N0   &kp FSLH
    &kp SQT      &kp X     &kp V     &kp L     &kp C     &kp W  &kp HOME                                      &kp DEL   &kp K    &kp H  &kp G     &kp F     &kp Q    &kp EQUAL
    &kp GRAVE    &kp U     &kp I     &kp A     &kp E     &kp O  &kp BSLH                                      &kp BSPC  &kp S    &kp N  &kp R     &kp T     &kp D    &kp MINUS
    &kp PG_UP    &kp Y     &kp LBKT  &kp RBKT  &kp P     &kp Z  &kp LSHFT   &kp LCTRL               &mo DE    &kp ENTER &kp B    &kp M  &kp COMMA &kp DOT   &kp J    &kp SEMI
    &kp PG_DN    &kp END   &kp LEFT  &kp RIGHT     &kp LALT     &kp LGUI    &kp SPACE               &mo NAV   &mo NUM      &kp TAB   &kp UP    &kp DOWN  &kp INS  &kp PSCRN
          >;

 
       };

        de_layer {
// ------------------------------------------------------------------------------------------------------------------------------------
// | trans | trans | trans | trans | trans | trans |                                  | trans | trans | trans | trans | trans | trans |
// | trans | trans | trans | trans | trans | trans | trans |                  | trans | trans | trans | trans | trans | trans | trans |
// | LGUI  | de_UE | trans | de_AE | trans | DE_OE | right  |                  | trans | de_sz | trans | trans | trans | trans | trans |
// | trans | de_ue | trans | de_ae | trans | de_oe | trans | trans |  | trans | trans | trans | trans | trans | trans | trans | trans |
// | trans | trans | trans | LCTRL | trans         | trans | trans |  | trans | trans | trans         | trans | trans | trans | trans |
          bindings = <
    &trans   &trans &trans &trans    &trans &trans                                  &trans &trans &trans &trans &trans &trans
    &trans   &trans &trans &trans    &trans &trans &trans                    &trans &trans &trans &trans &trans &trans &trans
    &kp LGUI &de_ue_shifted &trans &de_ae_shifted    &trans &de_oe_shifted &kp RIGHT                  &trans &trans &trans &trans &trans &trans &trans
    &trans   &trans &trans &trans    &trans &trans &trans   &trans    &trans &trans &trans &trans &trans &trans &trans &trans
    &trans   &trans &trans &kp LCTRL &trans        &trans   &trans    &trans &trans &trans        &trans &trans &trans &trans
          >;
        };

        nav_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | none  | none  | none  | none  | none  | none |                                  | none  | HOME | INS  | PG_UP | none  | none  |
// | trans | none  | none  | none  | none  | none | trans |                  | trans | none  | END  | UP   | PG_DN | none  | none  |
// | trans | none  | none  | none  | none  | none | CAPS  |                  | PSCRN | none  | LEFT | DOWN | RIGHT | none  | none  |
// | trans | none  | none  | none  | none  | none | trans | trans |  | TgMAC | trans | none  | none | none | none  | none  | none  |
// | trans | trans | trans | trans | trans        | trans | trans |  | trans | trans | trans        | none | none  | trans | trans |
          bindings = <
    &none  &none  &none  &none  &none  &none                                        &none &kp HOME &kp INS  &kp PG_UP &none  &none 
    &trans &none  &none  &none  &none  &none  &trans                      &trans    &none &kp END  &kp UP   &kp PG_DN &none  &none 
    &trans &none  &none  &none  &none  &none  &kp CAPS                    &kp PSCRN &none &kp LEFT &kp DOWN &kp RIGHT &none  &none 
    &trans &none  &none  &none  &none  &none  &trans   &trans    &trans &trans    &none &none    &none    &none     &none  &none 
    &trans &trans &trans &trans &trans        &trans   &trans    &trans   &trans    &trans         &none    &none     &trans &trans
          >;

        
        };

        num_layer {
// -------------------------------------------------------------------------------------------------------------------------------
// | none  | none | none  | none  | none  | none |                                  | none  | NUMLOCK | /   | *   | -     | none |
// | trans | none | none  | none  | none  | none | trans |                  | trans | none  | 7       | 8   | 9   | +     | none |
// | trans | none | none  | none  | none  | none | none  |                  | none  | none  | 4       | 5   | 6   | +     | none |
// | trans | none | none  | none  | none  | none | trans | trans |  | trans | trans | none  | 1       | 2   | 3   | ENTER | none |
// | trans | none | trans | trans | trans        | trans | trans |  | trans | trans | trans           | 0   | .   | ENTER | none |
          bindings = <
    &none  &none &none  &none  &none  &none                                    &none  &kp KP_NUM &kp KP_SLASH &kp KP_ASTERISK &kp KP_MINUS &none
    &trans &none &none  &none  &none  &none  &trans                     &trans &none  &kp KP_N7  &kp KP_N8    &kp KP_N9       &kp KP_PLUS  &none 
    &trans &none &none  &none  &none  &none  &none                      &none  &none  &kp KP_N4  &kp KP_N5    &kp KP_N6       &kp KP_PLUS  &none 
    &trans &none &none  &none  &none  &none  &trans   &trans    &trans  &trans &none  &kp KP_N1  &kp KP_N2    &kp KP_N3       &kp KP_ENTER &none 
    &trans &none &trans &trans &trans        &trans   &trans    &trans  &trans &trans            &kp KP_N0    &kp KP_DOT      &kp KP_ENTER &none
          >;

          
        };

        fn_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------
// | none  | F1   | F2    | F3    | F4    | F5         |                                  | F6         | F7     | F8     | F9      | F10  | F11  |
// | trans | none | {     | }     | none  | none       | trans |                  | trans | none       | BT_CLR | BT_PRV | BT_NXT  | none | F12  |
// | trans | none | (     | )     | none  | none      | none  |                  | none  | none      | none   | none   | none    | none | PLAY |
// | trans | none | [     | ]     | none  | none | trans | trans |  | trans | trans | none | none   | none   | none    | none | none |
// | trans | none | trans | trans | trans              | trans | trans |  | trans | trans | trans               | REWIND | FASTFWR | none | none |
          bindings = <
    &none &kp F1 &kp F2      &kp F3      &kp F4 &kp F5                                        &kp F6      &kp F7      &kp F8     &kp F9     &kp F10 &kp F11
    &trans &none  &kp LBRC    &kp RBRC    &none  &none       &trans                     &trans &none       &bt BT_CLR  &bt BT_PRV &bt BT_NXT &none   &kp F12
    &trans &none  &kp LPAR    &kp RPAR    &none  &none      &none                      &none  &none      &none       &none      &none      &none   &kp C_PP
    &trans &none  &kp LBKT    &kp RBKT    &none  &none &trans   &trans    &trans  &trans &none &none       &none      &none      &none   &none 
    &trans &none  &trans      &trans      &trans             &trans   &trans    &trans  &trans &trans                  &kp C_PREV &kp C_NEXT &none   &none
          >;

          
        };
    };
  };
  